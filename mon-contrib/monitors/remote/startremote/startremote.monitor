#!/usr/bin/perl
#
# $Id: startremote.monitor,v 1.1.1.1 2005/02/18 17:52:23 trockij Exp $ 
# $Revision: 1.1.1.1 $ 
# $Author: trockij $ 
#
#Usage:  startremote.monitor [options]
#
#   --remotehost<remotehost>   Host on which the monitor should be started
#   --remoteuser<user>         User on the remote-host which is allowed to run the given monitor
#   --remotemon<monitorprogram>  Monitor which should be started
#   --remoteparam<paramstring>   Params for the monitor program 
#   
#
#
#
#    Copyright (C) 2001, CubIT IT Solutions
#    Written by Severin Luftensteiner <severin.luftensteiner@cubit.at>
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

use Getopt::Long;

GetOptions( \%options,"remotehost=s", "remoteuser=s", "remotemon=s", "remoteparam=s" );

if (($options{remotehost} eq "") || ($options{remoteuser} eq "") || ($options{remotemon} eq "")){
print <<EOP1;
Usage:  startremote.monitor [options]
   --remotehost=<Remotehost>    Host on which the monitor should be started
   --remoteuser<user>           User on the remote-host which is allowed to run the postgresql.monitor
   --remotemon<monitorprogram>  Monitor which should be started
   --remoteparam<paramstring>   Params for the monitor program 
EOP1
    die(); 
}
my $output=`ssh $options{remoteuser}\@$options{remotehost} $options{remotemon} $options{remoteparam} 2> /dev/null`;
chomp($output);
if ($output ne ""){
  print $output."\n";
  exit 1; 
}
exit 0;


